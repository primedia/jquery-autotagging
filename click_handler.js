// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['jquery'], function($) {
    var ClickHandler;
    ClickHandler = (function() {
      function ClickHandler(wh, opts) {
        this.wh = wh;
        if (opts == null) {
          opts = {};
        }
        this.elemClicked = __bind(this.elemClicked, this);
        this.clickBindSelector = opts.clickBindSelector || 'a, input[type=submit], input[type=button], img';
        if (opts.exclusions != null) {
          this.clickBindSelector = this.clickBindSelector.replace(/,\s+/g, ":not(" + opts.exclusions + "), ");
        }
      }

      ClickHandler.prototype.bind = function(doc) {
        return $(doc).on('click', this.clickBindSelector, this.elemClicked);
      };

      ClickHandler.prototype.elemClicked = function(e, options) {
        var attr, attrs, domTarget, href, item, jQTarget, realName, subGroup, trackingData, value, _i, _len, _ref;
        if (options == null) {
          options = {};
        }
        domTarget = e.target;
        attrs = domTarget.attributes;
        jQTarget = $(e.target);
        if (!jQTarget.is(this.clickBindSelector)) {
          jQTarget = jQTarget.parent();
        }
        item = this.wh.getItemId(jQTarget) || '';
        subGroup = this.wh.getSubgroupId(jQTarget) || '';
        value = this.wh.replaceDoubleByteChars(jQTarget.text()) || '';
        trackingData = {
          sg: subGroup,
          item: item,
          value: value,
          type: 'click',
          x: e.clientX,
          y: e.clientY
        };
        for (_i = 0, _len = attrs.length; _i < _len; _i++) {
          attr = attrs[_i];
          if (attr.name.indexOf('data-') === 0 && (_ref = attr.name, __indexOf.call(this.wh.exclusionList, _ref) < 0)) {
            realName = attr.name.replace('data-', '');
            trackingData[realName] = attr.value;
          }
        }
        this.wh.setFollowHref(options);
        href = jQTarget.attr('href') || jQTarget.closest('a').attr('href');
        if (href && this.wh.followHref) {
          this.wh.lastLinkClicked = href;
          e.preventDefault();
        }
        this.wh.fire(trackingData);
        return e.stopPropagation();
      };

      return ClickHandler;

    })();
    return ClickHandler;
  });

}).call(this);
